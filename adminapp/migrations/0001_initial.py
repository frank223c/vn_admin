# Generated by Django 2.0.3 on 2018-08-15 11:54

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AlertNotification',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('deliverd_at', models.DateTimeField(blank=True, null=True)),
                ('viewed_at', models.DateTimeField(blank=True, null=True)),
                ('user_feedback', models.IntegerField(blank=True, null=True)),
                ('user_comments', models.TextField(blank=True, null=True)),
                ('status', models.IntegerField(blank=True, null=True)),
                ('status_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'alert_notification',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AlertRulesSubscription',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('preferences', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'alert_rules_subscription',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Alerts',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('message', models.CharField(max_length=256)),
                ('type', models.PositiveIntegerField()),
                ('generation_src', models.CharField(max_length=45)),
                ('generated_by', models.BigIntegerField(blank=True, null=True)),
                ('status', models.IntegerField(blank=True, null=True)),
                ('status_date', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'alerts',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CraneDevices',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_time', models.DateTimeField(blank=True, null=True)),
                ('end_time', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'crane_devices',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CraneIdleTime',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('daily_sequnce', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('start_time', models.DateTimeField()),
                ('end_time', models.DateTimeField(blank=True, null=True)),
                ('is_valid', models.IntegerField(blank=True, null=True)),
                ('type', models.CharField(blank=True, max_length=45, null=True)),
            ],
            options={
                'db_table': 'crane_idle_time',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CranePickCyclePhotos',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('path', models.CharField(max_length=256)),
                ('created_at', models.DateTimeField()),
            ],
            options={
                'db_table': 'crane_pick_cycle_photos',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CranePickCycles',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('daily_sequnce', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('start_time', models.DateTimeField()),
                ('end_time', models.DateTimeField(blank=True, null=True)),
                ('load_weight', models.IntegerField(blank=True, null=True)),
                ('load_from', models.TextField(blank=True, null=True)),
                ('load_to', models.TextField(blank=True, null=True)),
                ('accumulative_idle_time', models.IntegerField(blank=True, null=True)),
                ('route', models.TextField(blank=True, null=True)),
                ('load_alt_from', models.FloatField(blank=True, null=True)),
                ('load_alt_to', models.FloatField(blank=True, null=True)),
            ],
            options={
                'db_table': 'crane_pick_cycles',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CranePicksTags',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('tagged_by', models.CharField(blank=True, max_length=20, null=True)),
                ('tagged_at', models.DateTimeField(blank=True, null=True)),
                ('comments', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'crane_picks_tags',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CranePickSteps',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('step_num', models.PositiveSmallIntegerField()),
                ('start_time', models.DateTimeField()),
                ('end_time', models.DateTimeField(blank=True, null=True)),
                ('accumulative_idle_time', models.IntegerField(blank=True, null=True)),
                ('from_field', models.TextField(blank=True, db_column='from', null=True)),
                ('to', models.TextField(blank=True, null=True)),
                ('alt_from', models.FloatField(blank=True, null=True)),
                ('alt_to', models.FloatField(blank=True, null=True)),
            ],
            options={
                'db_table': 'crane_pick_steps',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CraneTypes',
            fields=[
                ('id', models.PositiveSmallIntegerField(primary_key=True, serialize=False)),
                ('category', models.CharField(blank=True, max_length=45, null=True)),
                ('name', models.CharField(blank=True, max_length=45, null=True)),
                ('vendor', models.CharField(blank=True, max_length=45, null=True)),
                ('model', models.CharField(blank=True, max_length=45, null=True)),
                ('max_load', models.PositiveIntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'crane_types',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Customers',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('address', models.CharField(blank=True, max_length=256, null=True)),
                ('status', models.IntegerField(blank=True, null=True)),
                ('status_date', models.DateTimeField(blank=True, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('update_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'customers',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DeviceBatteryHistory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('battery1_voltage', models.FloatField(blank=True, null=True)),
                ('battery2_voltage', models.FloatField(blank=True, null=True)),
                ('selected_battery', models.IntegerField(blank=True, null=True)),
                ('state_timestamp', models.DateTimeField()),
                ('battery1_bus_voltage', models.FloatField(blank=True, null=True)),
                ('battery2_bus_voltage', models.FloatField(blank=True, null=True)),
                ('battery1_bus_current', models.FloatField(blank=True, null=True)),
                ('battery2_bus_current', models.FloatField(blank=True, null=True)),
                ('battery1_power', models.FloatField(blank=True, null=True)),
                ('battery2_power', models.FloatField(blank=True, null=True)),
                ('battery1_shunt_voltage', models.FloatField(blank=True, null=True)),
                ('battery2_shunt_voltage', models.FloatField(blank=True, null=True)),
            ],
            options={
                'db_table': 'device_battery_history',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Devices',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.IntegerField()),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('status', models.IntegerField(blank=True, null=True)),
                ('status_date', models.DateTimeField(blank=True, null=True)),
                ('device_uuid', models.CharField(blank=True, max_length=20, null=True)),
                ('alias', models.CharField(blank=True, max_length=10, null=True)),
                ('device_sw_version', models.FloatField(blank=True, null=True)),
                ('devices_hw_version', models.FloatField(blank=True, null=True)),
                ('device_box_version', models.FloatField(blank=True, null=True)),
                ('device_details', models.TextField(blank=True, null=True)),
                ('device_parts_sn', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'devices',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DeviceWeightCalibration',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('offset', models.IntegerField()),
                ('factor', models.FloatField()),
            ],
            options={
                'db_table': 'device_weight_calibration',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='HawkeyeRawdata',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('device_sn', models.CharField(max_length=16)),
                ('event_timestamp', models.DateTimeField()),
                ('gps_timestamp', models.DateTimeField(blank=True, null=True)),
                ('event_arrival_timestamp', models.DateTimeField(blank=True, null=True)),
                ('gps_lat', models.CharField(blank=True, max_length=16, null=True)),
                ('gps_ns_ind', models.CharField(blank=True, max_length=1, null=True)),
                ('gps_lon', models.CharField(blank=True, max_length=16, null=True)),
                ('gps_ew_ind', models.CharField(blank=True, max_length=1, null=True)),
                ('gps_alt', models.CharField(blank=True, max_length=16, null=True)),
                ('bmp_alt', models.FloatField(blank=True, null=True)),
                ('bmp_tmp', models.FloatField(blank=True, null=True)),
                ('acc_ax', models.FloatField(blank=True, null=True)),
                ('acc_ay', models.FloatField(blank=True, null=True)),
                ('acc_az', models.FloatField(blank=True, null=True)),
                ('weight', models.FloatField(blank=True, null=True)),
                ('image_url', models.CharField(blank=True, max_length=256, null=True)),
            ],
            options={
                'db_table': 'hawkeye_rawdata',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='LoadCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('is_material', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'load_category',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='LoadTypes',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('is_material', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'load_types',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='LocationTypes',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=45, unique=True)),
            ],
            options={
                'db_table': 'location_types',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ModuleExecutionPiResults',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('pi_value', models.FloatField(blank=True, null=True)),
                ('start_time', models.DateTimeField(blank=True, null=True)),
                ('end_time', models.DateTimeField(blank=True, null=True)),
                ('equipment_id', models.PositiveIntegerField(blank=True, null=True)),
                ('material_id', models.PositiveIntegerField(blank=True, null=True)),
                ('product_id', models.PositiveIntegerField(blank=True, null=True)),
                ('process_id', models.PositiveIntegerField(blank=True, null=True)),
                ('created_at', models.DateTimeField()),
                ('extra_info', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'module_execution_pi_results',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ModulePermutations',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('version', models.FloatField(blank=True, null=True)),
                ('config', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'module_permutations',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ModuleRoles',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('raci', models.PositiveIntegerField()),
            ],
            options={
                'db_table': 'module_roles',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Modules',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(max_length=45)),
                ('name', models.CharField(max_length=100)),
                ('acronym', models.CharField(blank=True, max_length=45, null=True)),
                ('default_config', models.TextField(blank=True, null=True)),
                ('latest_version', models.FloatField(blank=True, null=True)),
            ],
            options={
                'db_table': 'modules',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ModulesExecutions',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('start_time', models.DateTimeField()),
                ('end_time', models.DateTimeField()),
                ('execution_entities', models.TextField(blank=True, null=True)),
                ('result', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'modules_executions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ModulesHierarchy',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sequnce_num', models.SmallIntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'modules_hierarchy',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='NotificationChannel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=45)),
            ],
            options={
                'db_table': 'notification_channel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='OperationalBenchmarks',
            fields=[
                ('id', models.PositiveIntegerField(primary_key=True, serialize=False)),
                ('upper_bound', models.FloatField(blank=True, null=True)),
                ('lower_bound', models.FloatField(blank=True, null=True)),
            ],
            options={
                'db_table': 'operational_benchmarks',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Organization',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=45, null=True)),
                ('type', models.PositiveIntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'organization',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='People',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=100, null=True)),
                ('email', models.CharField(blank=True, max_length=100, null=True)),
                ('phone', models.CharField(blank=True, max_length=20, null=True)),
                ('status', models.IntegerField(blank=True, null=True)),
                ('status_date', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'people',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Permissions',
            fields=[
                ('id', models.PositiveSmallIntegerField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=45)),
            ],
            options={
                'db_table': 'permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PersonOrganizations',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('relation_type', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'person_organizations',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PersonRoles',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'person_roles',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PersonSites',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('relation_type', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'person_sites',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PiTypes',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=45, unique=True)),
                ('description', models.CharField(blank=True, max_length=255, null=True)),
                ('pi_category', models.IntegerField(blank=True, null=True)),
                ('measuring_units', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'pi_types',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ProductDependencies',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'product_dependencies',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ProductTypes',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=45, unique=True)),
            ],
            options={
                'db_table': 'product_types',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Reports',
            fields=[
                ('id', models.BigIntegerField(primary_key=True, serialize=False)),
                ('report', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField()),
            ],
            options={
                'db_table': 'reports',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='RolePermissions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'role_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Roles',
            fields=[
                ('id', models.PositiveSmallIntegerField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'roles',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SiteApis',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('site_id', models.PositiveIntegerField(blank=True, null=True)),
                ('type', models.CharField(blank=True, max_length=45, null=True)),
                ('details', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'site_apis',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SiteCranes',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('crane_num', models.SmallIntegerField(blank=True, null=True)),
                ('location', models.TextField(blank=True, null=True)),
                ('start_time', models.DateTimeField(blank=True, null=True)),
                ('end_time', models.DateTimeField(blank=True, null=True)),
                ('max_load', models.PositiveIntegerField(blank=True, null=True)),
                ('status', models.IntegerField(blank=True, null=True)),
                ('status_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'site_cranes',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SiteKpiAlertRules',
            fields=[
                ('id', models.PositiveIntegerField(primary_key=True, serialize=False)),
                ('upper_bound', models.FloatField(blank=True, null=True)),
                ('lower_bound', models.FloatField(blank=True, null=True)),
                ('status', models.IntegerField(blank=True, null=True)),
                ('status_date', models.DateTimeField(blank=True, null=True)),
                ('message_template', models.TextField(blank=True, null=True)),
                ('check_interval', models.IntegerField()),
                ('timeframe', models.IntegerField()),
                ('raci', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'site_kpi_alert_rules',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SiteLocations',
            fields=[
                ('id', models.BigIntegerField(primary_key=True, serialize=False)),
                ('location', models.TextField(blank=True, null=True)),
                ('name', models.CharField(blank=True, max_length=45, null=True)),
                ('buttom_alt', models.FloatField(blank=True, null=True)),
                ('top_alt', models.FloatField(blank=True, null=True)),
            ],
            options={
                'db_table': 'site_locations',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SiteMaterialTracking',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('current', models.IntegerField(blank=True, null=True)),
                ('expected', models.IntegerField(blank=True, null=True)),
                ('status', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'site_material_tracking',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SiteProducts',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=45)),
                ('start_time', models.DateTimeField(blank=True, null=True)),
                ('end_time', models.DateTimeField(blank=True, null=True)),
                ('location', models.TextField(blank=True, null=True)),
                ('planned_start_time', models.DateTimeField(blank=True, null=True)),
                ('planned_end_time', models.DateTimeField(blank=True, null=True)),
                ('buttom_alt', models.FloatField(blank=True, null=True)),
                ('top_alt', models.FloatField(blank=True, null=True)),
            ],
            options={
                'db_table': 'site_products',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SiteReportTriggers',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('site_id', models.PositiveIntegerField()),
                ('scheduling', models.TextField()),
                ('kpis', models.TextField()),
            ],
            options={
                'db_table': 'site_report_triggers',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Sites',
            fields=[
                ('id', models.PositiveIntegerField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('address', models.CharField(blank=True, max_length=256, null=True)),
                ('city', models.CharField(max_length=45)),
                ('state', models.CharField(max_length=45)),
                ('zip_code', models.CharField(blank=True, max_length=45, null=True)),
                ('status', models.IntegerField(blank=True, null=True)),
                ('status_date', models.DateTimeField(blank=True, null=True)),
                ('start_date', models.DateTimeField(blank=True, null=True)),
                ('end_date', models.DateTimeField(blank=True, null=True)),
                ('operational_time', models.TextField(blank=True, null=True)),
                ('timezone', models.IntegerField(blank=True, null=True)),
                ('location', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'sites',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SiteVendors',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_time', models.DateTimeField(blank=True, null=True)),
                ('end_time', models.DateTimeField(blank=True, null=True)),
                ('status', models.IntegerField(blank=True, null=True)),
                ('materials', models.TextField(blank=True, null=True)),
                ('products', models.TextField(blank=True, null=True)),
                ('type', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'site_vendors',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='UserPermissions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'user_permissions',
                'managed': False,
            },
        ),
    ]
